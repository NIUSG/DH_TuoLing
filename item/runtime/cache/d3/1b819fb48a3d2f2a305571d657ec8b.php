<?php
//000000086400
 exit();?>
a:57:{i:31;a:15:{s:11:"bloginfo_id";i:31;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:25:" PHP操作阿里短信API";s:17:"bloginfo_describe";s:317:"阿里云短信API服务简介操作过程和普通接入第三方接口大同小异，需要用到的参数有公共参数,请求参数。

请求过程也就是&nbsp;传递数据-&gt;验签-&gt;接收数据-&gt;返回信息。

参数阿里云控制台有详细说明，下面代码也会提及。代码class...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239662;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:292;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:44;a:15:{s:11:"bloginfo_id";i:44;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:64:"shell脚本编程学习笔记3——Bash变量的运算与测试";s:17:"bloginfo_describe";s:301:"Bash变量的运算与测试1，数值运算和运算符declare申明变量类型
&nbsp;&nbsp;&nbsp;&nbsp;也就是说变量运算没有申明的时候，会以字符串形式的拼接，
只有把变量声明为数值型的时候才可以运算，申明变量为数值型有
三种方法

方...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523371776;s:19:"bloginfo_updatetime";i:1523371776;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:154;s:10:"created_at";s:19:"2018-04-10 22:49:36";s:4:"date";s:10:"2018-04-10";s:4:"time";s:8:"22:49:36";}i:34;a:15:{s:11:"bloginfo_id";i:34;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:31:"Redis缓存防止网站cc攻击";s:17:"bloginfo_describe";s:259:"Redis缓存防止网站cc攻击介绍前面写过一片利用session防止网站cc攻击的博客，这里换另一种方法，利用redis自增
来防止网站cc攻击。

废话不多说，上代码简单redis操作类&lt;?php
namespace&nbsp;App\mode...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239966;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:136;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:42;a:15:{s:11:"bloginfo_id";i:42;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:66:"shell脚本编程学习笔记1——shell基础与Bash基本功能";s:17:"bloginfo_describe";s:271:"shell脚本编程学习笔记1——shell基础与Bash基本功能1,简介：1，Shell就是一个命令行解释器，用以连接输入设别和内核。
2，Shell是解&nbsp;释执行的脚本语言，在Shell中可以直接调&nbsp;用Linux系统命令。&nbsp;
...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1522767682;s:19:"bloginfo_updatetime";i:1522767682;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:135;s:10:"created_at";s:19:"2018-04-03 23:01:22";s:4:"date";s:10:"2018-04-03";s:4:"time";s:8:"23:01:22";}i:49;a:15:{s:11:"bloginfo_id";i:49;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:57:"shell脚本编程学习笔记8——流程控制和循环";s:17:"bloginfo_describe";s:197:"shell脚本编程学习笔记8——流程控制和循环1，if语句1，框架1,单分支：
&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;[条件判断式]&nbsp;;then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523787739;s:19:"bloginfo_updatetime";i:1523787739;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:131;s:10:"created_at";s:19:"2018-04-15 18:22:19";s:4:"date";s:10:"2018-04-15";s:4:"time";s:8:"18:22:19";}i:32;a:15:{s:11:"bloginfo_id";i:32;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:26:"PHP QR Code生成二维码";s:17:"bloginfo_describe";s:193:"PHP QR Code生成二维码简介:PHP&nbsp;QR&nbsp;Code是php生成二维码的类库
下载地址:https://sourceforge.net/projects/phpqrcode/files/流程:解压文件后，调用phpqrcode.p...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239729;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:128;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:48;a:15:{s:11:"bloginfo_id";i:48;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:69:"shell脚本编程学习笔记7——字符处理命令和条件判断";s:17:"bloginfo_describe";s:201:"shell脚本编程学习笔记7——字符处理命令和条件判断1，字符处理[root@localhost&nbsp;~]#&nbsp;sort&nbsp;[选项]&nbsp;文件名&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;选项：&nbsp;&nb...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523761681;s:19:"bloginfo_updatetime";i:1523761681;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:121;s:10:"created_at";s:19:"2018-04-15 11:08:01";s:4:"date";s:10:"2018-04-15";s:4:"time";s:8:"11:08:01";}i:47;a:15:{s:11:"bloginfo_id";i:47;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:57:"shell脚本编程学习笔记6——字符串截取命令";s:17:"bloginfo_describe";s:203:"shell脚本编程学习笔记6——字符串截取命令1，cut命令[root@localhost&nbsp;~]#&nbsp;cut&nbsp;[选项]&nbsp;文件名
&nbsp;&nbsp;&nbsp;&nbsp;-f&nbsp;列号，表示提取第几列
&n...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523725230;s:19:"bloginfo_updatetime";i:1523725230;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:118;s:10:"created_at";s:19:"2018-04-15 01:00:30";s:4:"date";s:10:"2018-04-15";s:4:"time";s:8:"01:00:30";}i:43;a:15:{s:11:"bloginfo_id";i:43;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:46:"shell脚本编程学习笔记2——Bash变量";s:17:"bloginfo_describe";s:247:"shell脚本编程学习笔记2——Bash变量1，变量简介1，计算机内存单元

2，设置规则
&nbsp;&nbsp;&nbsp;&nbsp;字母数组下划线组成，不能以数字开头
&nbsp;&nbsp;&nbsp;&nbsp;Bash中，默认类型字符串型...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523287565;s:19:"bloginfo_updatetime";i:1523287565;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:114;s:10:"created_at";s:19:"2018-04-09 23:26:05";s:4:"date";s:10:"2018-04-09";s:4:"time";s:8:"23:26:05";}i:50;a:15:{s:11:"bloginfo_id";i:50;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:39:"php三种排序算法以及效率测试";s:17:"bloginfo_describe";s:157:"php三种排序算法以及效率测试&lt;?php
//select
$arr&nbsp;=&nbsp;range(1,10000);
shuffle($arr);
var_dump(&#39;select&nbsp;start&#39;);
$star...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1535094096;s:19:"bloginfo_updatetime";i:1535094096;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:98;s:10:"created_at";s:19:"2018-08-24 15:01:36";s:4:"date";s:10:"2018-08-24";s:4:"time";s:8:"15:01:36";}i:22;a:15:{s:11:"bloginfo_id";i:22;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:36:"Linux中的crontab定时任务详解";s:17:"bloginfo_describe";s:253:"Linux中的crontab定时任务详解1,简介它就是一个周期性执行任务的工具

cronjob&nbsp;//周期性执行的任务
crontab&nbsp;//周期性任务指定的列表2,操作检查是否安装以及是否运行crond(crontab的服务)
cr...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238874;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:88;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:7;a:15:{s:11:"bloginfo_id";i:7;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:106:"mysql存储过程和函数(三)——存储过程和自定义函数示例，大批量测试数据的插入";s:17:"bloginfo_describe";s:187:"mysql自定义函数和存储过程实例，给mysql表中插入大批量数据1，示例表CREATE&nbsp;TABLE&nbsp;`test`&nbsp;(
&nbsp;&nbsp;`id`&nbsp;int(10)&nbsp;unsigned&nbsp;NOT&n...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522215816;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:86;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:45;a:15:{s:11:"bloginfo_id";i:45;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:58:"shell脚本编程学习笔记4——Bash常见环境变量";s:17:"bloginfo_describe";s:313:"shell脚本编程学习笔记4——Bash常见环境变量非专业运维，例如开发人员，环境变量熟悉常见的，了解不常见的即可。1，简介环境变量配置文件中主要是定义对系统的&nbsp;操作环境生效的系统默认环境变量，比如&nbsp;PATH、
HISTSIZE、PS1、...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523461176;s:19:"bloginfo_updatetime";i:1523461176;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:83;s:10:"created_at";s:19:"2018-04-11 23:39:36";s:4:"date";s:10:"2018-04-11";s:4:"time";s:8:"23:39:36";}i:39;a:15:{s:11:"bloginfo_id";i:39;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:35:"redis数据库基础之基本操作";s:17:"bloginfo_describe";s:257:"redis数据库基础之基本操作1，简介:redis,k-v数据库,可以包含的数据类型有字符串，哈希，链表，集合，有序集合。

&nbsp;&nbsp;&nbsp;&nbsp;数据类型支持push/pop,add/remove,取交集，并集，差集等操作
...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1522718578;s:19:"bloginfo_updatetime";i:1522718578;s:8:"class_id";i:18;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:76;s:10:"created_at";s:19:"2018-04-03 09:22:58";s:4:"date";s:10:"2018-04-03";s:4:"time";s:8:"09:22:58";}i:35;a:15:{s:11:"bloginfo_id";i:35;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:33:"防止网页过快刷新-CC攻击";s:17:"bloginfo_describe";s:239:"防止网页过快刷新1，为什么防止网页过快刷新1，网页过快刷新，会增加服务器压力
2，有一定作用防止cc攻击2，原理代码&lt;?php
header(&#39;content_type:text/html;charset=utf-8&#39;);
//十秒...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522240029;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:66;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:46;a:15:{s:11:"bloginfo_id";i:46;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:51:"shell脚本编程学习笔记5——正则表达式";s:17:"bloginfo_describe";s:339:"shell脚本编程学习笔记5——正则表达式1,简介正则表达式，用来在文件中匹配符合条件的字符串，包含匹配。注意是文件中选择字符串，和通配符是
不同的。grep，awk，sed等命令可以支持正则表达式

通配符，是用来选择符合条件的文件名，完全匹配。
&...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1523708626;s:19:"bloginfo_updatetime";i:1523708626;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:65;s:10:"created_at";s:19:"2018-04-14 20:23:46";s:4:"date";s:10:"2018-04-14";s:4:"time";s:8:"20:23:46";}i:20;a:15:{s:11:"bloginfo_id";i:20;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:48:"ThinkPHP5框架拓展——添加自己的类库";s:17:"bloginfo_describe";s:351:"ThinkPHP5框架拓展——添加自己的类库说明：博主最近的项目，需要实现数据分页。但thinkphp自带的分页不想用。想把我之前自己
写的分页类加以使用。所以看了一下扩展类库的功能。既然工作完成了，想分享出来，一来自己做
笔记，二来给有需要学习的朋友一个...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238514;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:58;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:38;a:15:{s:11:"bloginfo_id";i:38;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:42:"laravel框架学习-artisan命令行开发";s:17:"bloginfo_describe";s:295:"laravel框架学习-artisan命令行开发简介artisan，是laravel框架内置的命令行接口。artisan命令行不仅可以提高
项目开发效率，还可以自定义命令行更加的完善项目的功能，是一个非常好用
的组件。
本文主要总结artisan开发自定...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1522568147;s:19:"bloginfo_updatetime";i:1522568147;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:52;s:10:"created_at";s:19:"2018-04-01 15:35:47";s:4:"date";s:10:"2018-04-01";s:4:"time";s:8:"15:35:47";}i:4;a:15:{s:11:"bloginfo_id";i:4;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:43:"Git系统学习记录(四)--git分支管理";s:17:"bloginfo_describe";s:169:"Git系统学习记录1，创建分支:&nbsp;&nbsp;&nbsp;&nbsp;git&nbsp;checkout&nbsp;-b&nbsp;new_branch;&nbsp;//创建分支并切换

&nbsp;&nbsp;&nbsp;&nbsp;git&n...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522214742;s:8:"class_id";i:4;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:50;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:3;a:15:{s:11:"bloginfo_id";i:3;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:47:"Git系统学习记录(三) --github远程仓库";s:17:"bloginfo_describe";s:215:"Git系统学习记录(三)远程仓库github远程仓库注册github账号，在github创建仓库，添加SSH&nbsp;Key，即可接通。

本地申请sshKey
&nbsp;&nbsp;&nbsp;&nbsp;运行：&nbsp;ssh-keygen&n...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522214671;s:8:"class_id";i:4;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:47;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:8;a:15:{s:11:"bloginfo_id";i:8;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:26:"composer安装以及使用";s:17:"bloginfo_describe";s:233:"composer安装以及使用1，composer简介1&gt;Composer&nbsp;&nbsp;&nbsp;&nbsp;主要就是管理和安装程序中使用到的PHP依赖库，与此同时提供自动加载机制,
方便依赖库的使用。

&nbsp;&nbsp;&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522235880;s:8:"class_id";i:4;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:44;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:40;a:15:{s:11:"bloginfo_id";i:40;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:29:"Redis常用系统命令归纳";s:17:"bloginfo_describe";s:183:"Redis常用系统命令归纳keys&nbsp;[pattern/*]&nbsp;//返回匹配的key，*代表全部
exists&nbsp;keyName&nbsp;&nbsp;&nbsp;//查询keyName的key是否存在
del&nbsp;&nbsp...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1522718639;s:19:"bloginfo_updatetime";i:1522718639;s:8:"class_id";i:18;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:43;s:10:"created_at";s:19:"2018-04-03 09:23:59";s:4:"date";s:10:"2018-04-03";s:4:"time";s:8:"09:23:59";}i:52;a:15:{s:11:"bloginfo_id";i:52;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:27:"hook编程机制(php实现)";s:17:"bloginfo_describe";s:411:"                                最近业余时间自己写框架玩，有用到hook。百度了网上的hook博客，发现全网基本上
都是几篇博客转来转去，且有些地方写的比较模糊。打算自己利用一个小小的用例
完善总结一下自己理解的hook，方便网友，巩固自己。                                
                                                        ";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1540975366;s:19:"bloginfo_updatetime";i:1540975366;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:43;s:10:"created_at";s:19:"2018-10-31 16:42:46";s:4:"date";s:10:"2018-10-31";s:4:"time";s:8:"16:42:46";}i:23;a:15:{s:11:"bloginfo_id";i:23;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:29:"MYSQL常见系统函数归纳";s:17:"bloginfo_describe";s:143:"字符串函数ASCII(char)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238959;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:42;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:1;a:15:{s:11:"bloginfo_id";i:1;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:41:"Git系统学习记录(一) --git的安装";s:17:"bloginfo_describe";s:293:"Git系统学习记录（一）git的安装1，git简介分布式版本控制工具，依托github具有非常强大的功能，从团队协作
到github开源项目的开发以及学习，总之是一个非常牛逼的工具2，git的安装：1,windows下安装:进入官网：https://git-...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522214555;s:8:"class_id";i:4;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:41;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:33;a:15:{s:11:"bloginfo_id";i:33;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:27:"PHP生成二维码封装类";s:17:"bloginfo_describe";s:319:"PHP生成二维码封装类简介:1，php生成二维码，利用单态设计模式进行封装，方便调用。
2，里边融合了面向对象的基础知识，几个魔术方法，加深熟练
3，如果需要php生成二维码的基础代码，我会把上一篇链接在本篇文章代码:&lt;?php
class&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239783;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:41;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:11;a:15:{s:11:"bloginfo_id";i:11;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:30:"封装简单分页类的实现";s:17:"bloginfo_describe";s:361:"封装简单分页类的实现1,面向对象编程最重要的一点，就是提高了代码的封装和重用性,提高开发效率。例如在一个项目中，有非常多个表，表记录非常大，需要列出表内容则需要分页，
一来减轻服务器数据库压力，二来使的页面整洁2,思路:分页，无非就是sql语句的limit条...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522236375;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:39;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:28;a:15:{s:11:"bloginfo_id";i:28;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:48:"PHPExcel插件的使用2——基本数据导入";s:17:"bloginfo_describe";s:249:"PHPExcel插件的使用2——基本数据导入本文归纳了phpexcel简单的数据导入,总体分为
&nbsp;&nbsp;&nbsp;&nbsp;文件直接导入数组，操作简单，消耗内存
&nbsp;&nbsp;&nbsp;&nbsp;逐行导入,操作繁杂,节约内...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239426;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:39;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:51;a:15:{s:11:"bloginfo_id";i:51;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:25:"java之简单工厂模式";s:17:"bloginfo_describe";s:381:"                                java之简单工厂模式概念：专门有一个类，作为工厂类，负责创建其他类的实例对象。一般情况下被创建的实例对象通常是具有共同的父类或者接口

提供一个类，有它负责根据一定的条件创建某一个具体的类的实例。实例代码：public class F...                            ";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1537881868;s:19:"bloginfo_updatetime";i:1537881868;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:39;s:10:"created_at";s:19:"2018-09-25 21:24:28";s:4:"date";s:10:"2018-09-25";s:4:"time";s:8:"21:24:28";}i:10;a:15:{s:11:"bloginfo_id";i:10;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:38:"php结合mysql数据库自定义排序";s:17:"bloginfo_describe";s:305:"简介a,所谓排序,首先要利用到mysql中的order&nbsp;by
b,所谓自定义排序,需要建表的时候设定排序id字段//oid
c,排序字段的值要不唯一,可以随便改。这样才能依次排序。如果唯一，修改id后会发生跨越排序的现象。
d,结合上面，最适合...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522236244;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:37;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:21;a:15:{s:11:"bloginfo_id";i:21;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:23:"Linux常见命令归纳";s:17:"bloginfo_describe";s:199:"liunx常见命令归纳详解超级用户登录初始目录(root用户家目录)/root/目录,下面含有三个文建
&nbsp;&nbsp;&nbsp;&nbsp;/root/install.log&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238714;s:8:"class_id";i:12;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:37;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:41;a:15:{s:11:"bloginfo_id";i:41;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:29:"Memcache基础之基本操作";s:17:"bloginfo_describe";s:193:"memcache和memcached1，memcache是完全在PHP框架内开发的，memecached是使用libmemcached的。
2，memcached&nbsp;会比&nbsp;memcache&nbsp;多几个方法。linux下操作memcac...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1522724439;s:19:"bloginfo_updatetime";i:1522724439;s:8:"class_id";i:18;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:36;s:10:"created_at";s:19:"2018-04-03 11:00:39";s:4:"date";s:10:"2018-04-03";s:4:"time";s:8:"11:00:39";}i:9;a:15:{s:11:"bloginfo_id";i:9;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:39:"PHP递归实现无限分类数组处理";s:17:"bloginfo_describe";s:265:"PHP递归实现无限分类数组处理1,php递归算法实现无限分类递归算法对无限分类的数组进行处理,分两种情况，
&nbsp;&nbsp;&nbsp;&nbsp;一种树状展示(数组包含子数组)，
&nbsp;&nbsp;&nbsp;&nbsp;一种非树状展示(子...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522236163;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:35;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:12;a:15:{s:11:"bloginfo_id";i:12;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:43:"MYSQL的索引（mysql优化之索引篇）";s:17:"bloginfo_describe";s:297:"MYSQL的索引（mysql优化之索引篇）mysql性能的优化索引优化
select语句优化,值得注意的是join语句越多,性能越不好，酌情写语句
服务器参数的设计select语句select语句输入命令之后，要通过mysql优化器自动做出最优顺序进行。而...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522236706;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:35;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:37;a:15:{s:11:"bloginfo_id";i:37;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:26:"php获取客户端ip地址";s:17:"bloginfo_describe";s:335:"php获取客户端ip地址简介最近做的项目需要php获取网站客户端访问的ip地址,其实原理很简单，从
php的$_SERVER全局数组中直接获取即可。不过有的时候服务器不同或者
代理服务器等等问题,索性全部总结一遍，基本各种情况都考虑到了，直接
使用即可代...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522240166;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:35;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:2;a:15:{s:11:"bloginfo_id";i:2;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:41:"Git系统学习记录(二) --时光穿梭";s:17:"bloginfo_describe";s:203:"Git系统学习记录(二)时光穿梭1，本地版本库创建1,创建目录，进入目录，git&nbsp;init变成仓库
例如:
&nbsp;&nbsp;&nbsp;&nbsp;mkdir&nbsp;repository
&nbsp;&nbsp;&nbsp;&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522214610;s:8:"class_id";i:4;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:34;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:24;a:15:{s:11:"bloginfo_id";i:24;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:32:"mysql简单操作慢查询日志";s:17:"bloginfo_describe";s:199:"mysql简单操作慢查询日志设置慢查询日志查看开关以及文件路径
&nbsp;&nbsp;&nbsp;&nbsp;show&nbsp;variables&nbsp;like&nbsp;&#39;%slow_query_log%&#39;;

慢查询日志开关...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239070;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:33;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:6;a:15:{s:11:"bloginfo_id";i:6;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:62:"mysql存储过程和函数（二）——简单自定义函数";s:17:"bloginfo_describe";s:185:"mysql自定义函数1，简单函数需求:编写函数，传入一个film_id,返回电影名(title)

delimiter&nbsp;$$
&nbsp;&nbsp;&nbsp;&nbsp;create&nbsp;function&nbsp;get_film_...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522215000;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:32;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:16;a:15:{s:11:"bloginfo_id";i:16;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:29:"mysql的SQL语句基础归纳";s:17:"bloginfo_describe";s:165:"mysql的SQL语句基础归纳连接数据库：
&nbsp;&nbsp;&nbsp;&nbsp;远程：mysql&nbsp;-h&nbsp;xxx.xxx.xxx.xxx&nbsp;&nbsp;&nbsp;-u&nbsp;root&nbsp;-p
&nbsp;...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238173;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:32;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:14;a:15:{s:11:"bloginfo_id";i:14;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:26:"thinkphp模板继承小结";s:17:"bloginfo_describe";s:357:"thinkphp模板继承小结hp的模板继承,通俗一点,就是设定一个模板布局,继承的子类，都要按照这个模板展示。模板继承的好处1，可以把公共部分直接加载在父极模板,在后续的网页加载过成中,直接加载子模块,子模块按照模板规则，在给定的地方展示出来。2，公共部分的输...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522237931;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:31;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:36;a:15:{s:11:"bloginfo_id";i:36;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:27:"微信二维码扫描登录";s:17:"bloginfo_describe";s:289:"微信二维码扫描登录&nbsp;&nbsp;&nbsp;&nbsp;最近做了微信二维码扫描登录的工作。实则非常简单。
&nbsp;&nbsp;&nbsp;&nbsp;其实就是各种接口互相调用，收取参数跳页的过程。不过不熟练
的情况下，会比较麻烦，无从下手。从...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522240112;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:31;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:13;a:15:{s:11:"bloginfo_id";i:13;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:29:" 原生Ajax技术归纳总结";s:17:"bloginfo_describe";s:353:"原生ajax技术归纳总结1什么是ajax客户端的页面和服务器之间完成通信的技术，实在同一个页面文档中完 成客户端和服务端的交互。和提交表单,刷新页面,iframe，远程脚本 是不同的。常用来提交表单，局部刷新，滚动加载等等。2工作过程简单来说，就是给服务器一个...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522237841;s:8:"class_id";i:16;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:30;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:19;a:15:{s:11:"bloginfo_id";i:19;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:18:"猴子选大王法";s:17:"bloginfo_describe";s:261:"说明:n个猴子围成一圈，从某个开始报数1-2……m,1-2……m报“m”的猴子就被淘汰，
游戏一直进行到圈内只剩一只猴子它就是猴大王了。代码实现1，常规代码function&nbsp;fun1($n,$m)
{&nbsp;
&nbsp;&nbsp;&nb...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238449;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:30;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:17;a:15:{s:11:"bloginfo_id";i:17;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:15:"二分查找法";s:17:"bloginfo_describe";s:351:"二分查找法简介1，二分查找法,就相当是在循环中边比较边排除的一种搜索定位的方法,循环次数比我们平时的逐步搜索少,性能高

2，简单来讲,就是在必须是有序的序列中，寻找某个值,通过一分为二的比较排除,减少比较次数

3，每次排除都把所有的情况分成&quo...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238270;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:27;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:26;a:15:{s:11:"bloginfo_id";i:26;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:32:"mysql优化之全局查询日志";s:17:"bloginfo_describe";s:243:"全局查询日志1，配置启用全局查询日志注意：测试环境检测sql操作情况，切忌在生产环境中开启此功能

1,命令设置：(当前session有效)
&nbsp;&nbsp;&nbsp;&nbsp;//开启
&nbsp;&nbsp;&nbsp;&nbsp;se...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239242;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:27;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:5;a:15:{s:11:"bloginfo_id";i:5;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:64:"mysql存储过程和函数(一)——简单的存储过程编写";s:17:"bloginfo_describe";s:219:"存储过程存储过程简介：
&nbsp;&nbsp;&nbsp;&nbsp;能完成比较复杂的判断和运算
&nbsp;&nbsp;&nbsp;&nbsp;可编程性强，灵活
&nbsp;&nbsp;&nbsp;&nbsp;sql编程的代码可以重复使用
&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522214939;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:26;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:27;a:15:{s:11:"bloginfo_id";i:27;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:48:"PHPExcel插件的使用1——基本数据导出";s:17:"bloginfo_describe";s:327:"PHPExcel插件的使用1——基本数据导出本文总结了phpexcel的简单数据导出.归纳了步骤,解释了方法.最后用实例写出了建立多个sheet情况下数据库的导出。
插入图片,样式等等会在后期连载。不过一般导出之后处理样式会更加方便。准备工作1，下载phpe...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239364;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:25;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:30;a:15:{s:11:"bloginfo_id";i:30;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:42:"PHP的buffer缓冲机制实现静态页面";s:17:"bloginfo_describe";s:183:"PHP的buffer缓冲机制实现纯静态页面php.ini文件&nbsp;&nbsp;&nbsp;&nbsp;output_buffering&nbsp;=&nbsp;on/off&nbsp;&nbsp;//打开/关闭php的buffer(文件缓冲机制)&nbs...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239588;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:25;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:29;a:15:{s:11:"bloginfo_id";i:29;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:18:"PHP的错误处理";s:17:"bloginfo_describe";s:167:"PHP常见错误报告级别E_ERROR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;致命性的运行时错误
E_WARNING&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239501;s:8:"class_id";i:15;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:24;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:25;a:15:{s:11:"bloginfo_id";i:25;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:43:" mysql优化之SHOW PROFILE 定位SQL语句";s:17:"bloginfo_describe";s:203:"mysql优化之SHOW PROFILE sql语句定位1,show profileshow&nbsp;profile&nbsp;就是mysql提供的可以用来分析当前会话中语句执行的资源损耗情况。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522239125;s:8:"class_id";i:5;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:23;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:18;a:15:{s:11:"bloginfo_id";i:18;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:15:"冒泡排序法";s:17:"bloginfo_describe";s:253:"冒泡排序法简介:第一轮排最小，第二轮排第二小，第三轮排第三小，依次类推……代码实现:&lt;?php
$test_arr&nbsp;=&nbsp;array(1,3,5,7,9,10,8,6,4,2);
//冒泡排序
//第一轮排最小，第二轮排第二小，第...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238316;s:8:"class_id";i:13;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:21;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:15;a:15:{s:11:"bloginfo_id";i:15;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:27:"网页简单的分帧技术";s:17:"bloginfo_describe";s:339:"网页简单的分帧技术网页分帧简介：网页分帧，就是把一个web页面分成不同的区块，每一个区块实际上都是独立的网页
，拥有自己独立的url，其间互不干扰。&nbsp;也可以理解为将若干个网页拼盘到同一个web页
面显示出来。主要标签1，分割窗口标记&lt;fra...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1514736000;s:19:"bloginfo_updatetime";i:1522238065;s:8:"class_id";i:17;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:19;s:10:"created_at";s:19:"2018-01-01 00:00:00";s:4:"date";s:10:"2018-01-01";s:4:"time";s:8:"00:00:00";}i:54;a:15:{s:11:"bloginfo_id";i:54;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:35:"java内部类——2静态内部类";s:17:"bloginfo_describe";s:273:"静态内部类简介：
&nbsp;&nbsp;&nbsp;&nbsp;1，使用static修饰的成员内部类就是静态内部类
&nbsp;&nbsp;&nbsp;&nbsp;2，静态内部类和外部类没有任何关系，只是生成类名和类定义的时候有影响，静态内部类和外部类是...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1544020676;s:19:"bloginfo_updatetime";i:1544020676;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:15;s:10:"created_at";s:19:"2018-12-05 22:37:56";s:4:"date";s:10:"2018-12-05";s:4:"time";s:8:"22:37:56";}i:55;a:15:{s:11:"bloginfo_id";i:55;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:54:"java内部类——3 匿名内部类和局部内部类";s:17:"bloginfo_describe";s:373:"匿名内部类简介：1，匿名内部类，没有名称的内部类，无法引用。只能在创建时，作为new语句的一部分来声明他的实例
2，匿名内部类必须继承一个类，抽象类，正常类，接口都可以。如果父类有抽象方法，那么必须实现父类所有的抽象方法
3，匿名内部内中可以声明代码块，用...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1544102320;s:19:"bloginfo_updatetime";i:1544102320;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:12;s:10:"created_at";s:19:"2018-12-06 21:18:40";s:4:"date";s:10:"2018-12-06";s:4:"time";s:8:"21:18:40";}i:53;a:15:{s:11:"bloginfo_id";i:53;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:35:"java内部类——1成员内部类";s:17:"bloginfo_describe";s:379:"                                java内部类内部类分类概念：就是将一个类定义在另一个类的内部

成员内部类
静态内部类
匿名内部类
局部内部类内部类的功能特点1，实现隐藏，用protected和private修饰
2，内部类可以直接访问外部所有成员，包含私有
3，外部内不能直...                            ";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1543931099;s:19:"bloginfo_updatetime";i:1543931099;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:9;s:10:"created_at";s:19:"2018-12-04 21:44:59";s:4:"date";s:10:"2018-12-04";s:4:"time";s:8:"21:44:59";}i:56;a:15:{s:11:"bloginfo_id";i:56;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:39:"JAVA内部类实现kv数据容器实例";s:17:"bloginfo_describe";s:155:"JAVA内部类实现kv数据容器实例import&nbsp;java.util.Arrays;
public&nbsp;class&nbsp;ContainerDemo
{
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;stati...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1544622693;s:19:"bloginfo_updatetime";i:1544622693;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:4;s:10:"created_at";s:19:"2018-12-12 21:51:33";s:4:"date";s:10:"2018-12-12";s:4:"time";s:8:"21:51:33";}i:57;a:15:{s:11:"bloginfo_id";i:57;s:12:"bloginfo_oid";i:0;s:14:"bloginfo_title";s:33:"java.util.arrays 常见方法demo";s:17:"bloginfo_describe";s:141:"java.util.arrays 常见方法demoimport&nbsp;java.util.Arrays;public&nbsp;class&nbsp;JavaDemo
{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static...";s:12:"bloginfo_img";s:28:"InitializeImg/initialize.jpg";s:15:"bloginfo_status";i:1;s:19:"bloginfo_createtime";i:1544773365;s:19:"bloginfo_updatetime";i:1544773365;s:8:"class_id";i:20;s:13:"bloginfo_like";i:0;s:13:"bloginfo_hate";i:0;s:14:"bloginfo_click";i:3;s:10:"created_at";s:19:"2018-12-14 15:42:45";s:4:"date";s:10:"2018-12-14";s:4:"time";s:8:"15:42:45";}}